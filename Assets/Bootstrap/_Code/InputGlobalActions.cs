//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Bootstrap/InputGlobalActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace FreeParking.Bootstrap
{
    public partial class @InputGlobalActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputGlobalActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputGlobalActions"",
    ""maps"": [
        {
            ""name"": ""GlobalActionsMap"",
            ""id"": ""a44cdc49-e132-49c1-aeb4-f327342b9c4a"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""26cbfda9-8a0a-4474-a507-a91c2d36fd32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ForceLeaveDevDungeon"",
                    ""type"": ""Button"",
                    ""id"": ""9eb5d604-5324-4796-a0f1-c4d979a97c0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eeefd1ef-ab73-4e19-82e9-e5918c4e7a65"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58d4610c-7c99-4fee-8fe1-6b181229a1b4"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KB Combo"",
                    ""id"": ""9608120d-5969-45ee-acff-4288be0e8e2a"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForceLeaveDevDungeon"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""aa36c7d8-3bcf-4244-b544-e57c9e5b368a"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForceLeaveDevDungeon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""c5531402-ecb4-444d-a6e2-bae5a01af95a"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForceLeaveDevDungeon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GP Combo"",
                    ""id"": ""b4bf2268-2861-4209-812a-b3e9b71ba6db"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForceLeaveDevDungeon"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f901f883-f42a-4bdb-beaa-4c00676a1f65"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForceLeaveDevDungeon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""751e2e4f-5054-47b6-93c9-445b58dd4524"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForceLeaveDevDungeon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // GlobalActionsMap
            m_GlobalActionsMap = asset.FindActionMap("GlobalActionsMap", throwIfNotFound: true);
            m_GlobalActionsMap_Pause = m_GlobalActionsMap.FindAction("Pause", throwIfNotFound: true);
            m_GlobalActionsMap_ForceLeaveDevDungeon = m_GlobalActionsMap.FindAction("ForceLeaveDevDungeon", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GlobalActionsMap
        private readonly InputActionMap m_GlobalActionsMap;
        private List<IGlobalActionsMapActions> m_GlobalActionsMapActionsCallbackInterfaces = new List<IGlobalActionsMapActions>();
        private readonly InputAction m_GlobalActionsMap_Pause;
        private readonly InputAction m_GlobalActionsMap_ForceLeaveDevDungeon;
        public struct GlobalActionsMapActions
        {
            private @InputGlobalActions m_Wrapper;
            public GlobalActionsMapActions(@InputGlobalActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Pause => m_Wrapper.m_GlobalActionsMap_Pause;
            public InputAction @ForceLeaveDevDungeon => m_Wrapper.m_GlobalActionsMap_ForceLeaveDevDungeon;
            public InputActionMap Get() { return m_Wrapper.m_GlobalActionsMap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GlobalActionsMapActions set) { return set.Get(); }
            public void AddCallbacks(IGlobalActionsMapActions instance)
            {
                if (instance == null || m_Wrapper.m_GlobalActionsMapActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GlobalActionsMapActionsCallbackInterfaces.Add(instance);
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @ForceLeaveDevDungeon.started += instance.OnForceLeaveDevDungeon;
                @ForceLeaveDevDungeon.performed += instance.OnForceLeaveDevDungeon;
                @ForceLeaveDevDungeon.canceled += instance.OnForceLeaveDevDungeon;
            }

            private void UnregisterCallbacks(IGlobalActionsMapActions instance)
            {
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @ForceLeaveDevDungeon.started -= instance.OnForceLeaveDevDungeon;
                @ForceLeaveDevDungeon.performed -= instance.OnForceLeaveDevDungeon;
                @ForceLeaveDevDungeon.canceled -= instance.OnForceLeaveDevDungeon;
            }

            public void RemoveCallbacks(IGlobalActionsMapActions instance)
            {
                if (m_Wrapper.m_GlobalActionsMapActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGlobalActionsMapActions instance)
            {
                foreach (var item in m_Wrapper.m_GlobalActionsMapActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GlobalActionsMapActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GlobalActionsMapActions @GlobalActionsMap => new GlobalActionsMapActions(this);
        public interface IGlobalActionsMapActions
        {
            void OnPause(InputAction.CallbackContext context);
            void OnForceLeaveDevDungeon(InputAction.CallbackContext context);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Dev Dungeons/NetForce/ITWN/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace NetForce
{
    public partial class @PlayerInput: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""CharacterActions"",
            ""id"": ""20c671c4-abcc-46fc-b8a8-c4a34ffc5a21"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""01f3f5af-330a-4364-85a0-8770cf5d0840"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AntiSkid"",
                    ""type"": ""Button"",
                    ""id"": ""1b687270-b7b1-4618-8513-0bc427f612ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Button"",
                    ""id"": ""e0cfed9a-2b92-4a33-aa35-9f3d5d22ab4b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""112b6bda-7e83-46ae-a6b4-f41ba5142167"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""26a8db97-3161-4c0c-8b6f-8d7d86858cff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LevelUpOption1"",
                    ""type"": ""Button"",
                    ""id"": ""ce48fbcd-edd2-4b56-b48c-6049f3682eaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LevelUpOption2"",
                    ""type"": ""Button"",
                    ""id"": ""f500cd92-ae76-489f-a673-b2ee2fccaa20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LevelUpOption3"",
                    ""type"": ""Button"",
                    ""id"": ""b483993d-2944-413f-a431-8d26bd2c86e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""88788398-10d4-48ca-b0b2-3a69adbf3ba3"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0bfdc816-ae7a-495c-be7e-a2105a10933c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""19cc1544-7b2f-4069-8d46-74e4aeb49ed7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""613fcb30-adc2-422f-8dd7-b57ab2646a78"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""531965d3-dc9e-420f-b816-384c8a9ba7ad"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""536dcc4d-9670-46ce-a867-8511fe0fc2b6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""471d4bf4-f10d-4136-bff7-f7e13269b800"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AntiSkid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49043786-e6d3-48e2-8c66-f35e42c3d201"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AntiSkid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0096f8eb-8b66-4d3c-b6ab-80184495ea42"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbc1a5d5-b8f2-441b-a5f4-cce750e8fb1e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e0352f3-4bea-4224-8903-596809ae1a67"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ce442c8-b49d-4a39-9aa1-5145860e05f2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e65b840-00b1-416b-a4e0-cc6686d1f076"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de791b4c-351f-4020-9319-69165a93ed4a"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec585cf3-ddfb-4a93-83a2-27a37035790e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelUpOption1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""029eb4d6-55e5-4c98-871d-b10b703e06c5"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelUpOption1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16b78d8d-236f-42d0-9e72-b6fbd7e2c31f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelUpOption2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe3607ed-f1f4-4410-bb2f-d0735a7b2744"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelUpOption2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c6b9e3d-66fa-4ad5-ae27-f72d4b830104"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelUpOption3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67591d4d-f8ea-4e2c-adc7-1258c752c086"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LevelUpOption3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // CharacterActions
            m_CharacterActions = asset.FindActionMap("CharacterActions", throwIfNotFound: true);
            m_CharacterActions_Movement = m_CharacterActions.FindAction("Movement", throwIfNotFound: true);
            m_CharacterActions_AntiSkid = m_CharacterActions.FindAction("AntiSkid", throwIfNotFound: true);
            m_CharacterActions_Brake = m_CharacterActions.FindAction("Brake", throwIfNotFound: true);
            m_CharacterActions_Jump = m_CharacterActions.FindAction("Jump", throwIfNotFound: true);
            m_CharacterActions_Crouch = m_CharacterActions.FindAction("Crouch", throwIfNotFound: true);
            m_CharacterActions_LevelUpOption1 = m_CharacterActions.FindAction("LevelUpOption1", throwIfNotFound: true);
            m_CharacterActions_LevelUpOption2 = m_CharacterActions.FindAction("LevelUpOption2", throwIfNotFound: true);
            m_CharacterActions_LevelUpOption3 = m_CharacterActions.FindAction("LevelUpOption3", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // CharacterActions
        private readonly InputActionMap m_CharacterActions;
        private List<ICharacterActionsActions> m_CharacterActionsActionsCallbackInterfaces = new List<ICharacterActionsActions>();
        private readonly InputAction m_CharacterActions_Movement;
        private readonly InputAction m_CharacterActions_AntiSkid;
        private readonly InputAction m_CharacterActions_Brake;
        private readonly InputAction m_CharacterActions_Jump;
        private readonly InputAction m_CharacterActions_Crouch;
        private readonly InputAction m_CharacterActions_LevelUpOption1;
        private readonly InputAction m_CharacterActions_LevelUpOption2;
        private readonly InputAction m_CharacterActions_LevelUpOption3;
        public struct CharacterActionsActions
        {
            private @PlayerInput m_Wrapper;
            public CharacterActionsActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Movement => m_Wrapper.m_CharacterActions_Movement;
            public InputAction @AntiSkid => m_Wrapper.m_CharacterActions_AntiSkid;
            public InputAction @Brake => m_Wrapper.m_CharacterActions_Brake;
            public InputAction @Jump => m_Wrapper.m_CharacterActions_Jump;
            public InputAction @Crouch => m_Wrapper.m_CharacterActions_Crouch;
            public InputAction @LevelUpOption1 => m_Wrapper.m_CharacterActions_LevelUpOption1;
            public InputAction @LevelUpOption2 => m_Wrapper.m_CharacterActions_LevelUpOption2;
            public InputAction @LevelUpOption3 => m_Wrapper.m_CharacterActions_LevelUpOption3;
            public InputActionMap Get() { return m_Wrapper.m_CharacterActions; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CharacterActionsActions set) { return set.Get(); }
            public void AddCallbacks(ICharacterActionsActions instance)
            {
                if (instance == null || m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Add(instance);
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @AntiSkid.started += instance.OnAntiSkid;
                @AntiSkid.performed += instance.OnAntiSkid;
                @AntiSkid.canceled += instance.OnAntiSkid;
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @LevelUpOption1.started += instance.OnLevelUpOption1;
                @LevelUpOption1.performed += instance.OnLevelUpOption1;
                @LevelUpOption1.canceled += instance.OnLevelUpOption1;
                @LevelUpOption2.started += instance.OnLevelUpOption2;
                @LevelUpOption2.performed += instance.OnLevelUpOption2;
                @LevelUpOption2.canceled += instance.OnLevelUpOption2;
                @LevelUpOption3.started += instance.OnLevelUpOption3;
                @LevelUpOption3.performed += instance.OnLevelUpOption3;
                @LevelUpOption3.canceled += instance.OnLevelUpOption3;
            }

            private void UnregisterCallbacks(ICharacterActionsActions instance)
            {
                @Movement.started -= instance.OnMovement;
                @Movement.performed -= instance.OnMovement;
                @Movement.canceled -= instance.OnMovement;
                @AntiSkid.started -= instance.OnAntiSkid;
                @AntiSkid.performed -= instance.OnAntiSkid;
                @AntiSkid.canceled -= instance.OnAntiSkid;
                @Brake.started -= instance.OnBrake;
                @Brake.performed -= instance.OnBrake;
                @Brake.canceled -= instance.OnBrake;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @Crouch.started -= instance.OnCrouch;
                @Crouch.performed -= instance.OnCrouch;
                @Crouch.canceled -= instance.OnCrouch;
                @LevelUpOption1.started -= instance.OnLevelUpOption1;
                @LevelUpOption1.performed -= instance.OnLevelUpOption1;
                @LevelUpOption1.canceled -= instance.OnLevelUpOption1;
                @LevelUpOption2.started -= instance.OnLevelUpOption2;
                @LevelUpOption2.performed -= instance.OnLevelUpOption2;
                @LevelUpOption2.canceled -= instance.OnLevelUpOption2;
                @LevelUpOption3.started -= instance.OnLevelUpOption3;
                @LevelUpOption3.performed -= instance.OnLevelUpOption3;
                @LevelUpOption3.canceled -= instance.OnLevelUpOption3;
            }

            public void RemoveCallbacks(ICharacterActionsActions instance)
            {
                if (m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICharacterActionsActions instance)
            {
                foreach (var item in m_Wrapper.m_CharacterActionsActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CharacterActionsActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CharacterActionsActions @CharacterActions => new CharacterActionsActions(this);
        public interface ICharacterActionsActions
        {
            void OnMovement(InputAction.CallbackContext context);
            void OnAntiSkid(InputAction.CallbackContext context);
            void OnBrake(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnCrouch(InputAction.CallbackContext context);
            void OnLevelUpOption1(InputAction.CallbackContext context);
            void OnLevelUpOption2(InputAction.CallbackContext context);
            void OnLevelUpOption3(InputAction.CallbackContext context);
        }
    }
}
